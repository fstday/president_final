# Generated by Django 5.1.7 on 2025-03-17 11:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_id', models.IntegerField(unique=True, verbose_name='Идентификатор статуса записи')),
                ('status_name', models.CharField(max_length=255, verbose_name='Описание статуса записи')),
            ],
            options={
                'verbose_name': 'Статус записи',
                'verbose_name_plural': 'Статусы записей',
                'ordering': ['status_id'],
            },
        ),
        migrations.CreateModel(
            name='CallStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_id', models.IntegerField(unique=True, verbose_name='Идентификатор результата звонка')),
                ('status_name', models.CharField(max_length=255, verbose_name='Наименование результата звонка')),
            ],
            options={
                'verbose_name': 'Статус звонка',
                'verbose_name_plural': 'Статусы звонков',
                'ordering': ['status_id'],
            },
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic_id', models.IntegerField(unique=True, verbose_name='Идентификатор филиала (FILIAL)')),
                ('name', models.CharField(max_length=255, verbose_name='Название филиала (FNAME)')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес (FADDR)')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телефон (FPHONE)')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email (FMAIL)')),
                ('timezone', models.IntegerField(default=3, verbose_name='Часовой пояс (TIMEZONE)')),
                ('view_in_web', models.BooleanField(default=False, verbose_name='Отображать на сайте (VIEWINWEB_OUT)')),
                ('work_hours', models.TextField(blank=True, null=True, verbose_name='Часы работы (WORKHOURS)')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Широта (LATITUDE)')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Долгота (LONGTITUDE)')),
            ],
            options={
                'verbose_name': 'Клиника',
                'verbose_name_plural': 'Клиники',
            },
        ),
        migrations.CreateModel(
            name='IgnoredPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.BigIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.BigIntegerField(unique=True, verbose_name='Идентификатор пациента (PCODE)')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО пациента (PNAME)')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес пациента (PADDR)')),
                ('phone_mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='Мобильный телефон (PPHONE)')),
                ('phone_home', models.CharField(blank=True, max_length=20, null=True, verbose_name='Домашний телефон (HOMEPHONE)')),
                ('phone_work', models.CharField(blank=True, max_length=20, null=True, verbose_name='Рабочий телефон (WORKPHONE)')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email (PMAIL)')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения (BDATE)')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(1, 'Мужской'), (2, 'Женский')], null=True, verbose_name='Пол пациента (GENDER)')),
                ('refuse_email', models.BooleanField(blank=True, default=False, null=True, verbose_name='Отказ от почтовой рассылки (REFUSEMAIL)')),
                ('refuse_call', models.BooleanField(blank=True, default=False, null=True, verbose_name='Отказ от обзвона (REFUSECALL)')),
                ('refuse_sms', models.BooleanField(blank=True, default=False, null=True, verbose_name='Отказ от SMS (REFUSESMS)')),
                ('refuse_messengers', models.BooleanField(blank=True, default=False, null=True, verbose_name='Отказ от мессенджеров (REFUSEMESSENGERS)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
            },
        ),
        migrations.CreateModel(
            name='QueueReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_id', models.IntegerField(unique=True, verbose_name='Идентификатор причины (ADDID)')),
                ('reason_name', models.CharField(max_length=255, verbose_name='Название причины (ADDNAME)')),
            ],
            options={
                'verbose_name': 'Причина очереди',
                'verbose_name_plural': 'Причины очередей',
                'ordering': ['reason_id'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_id', models.BigIntegerField(unique=True, verbose_name='Идентификатор отделения (DEPNUM)')),
                ('name', models.CharField(max_length=255, verbose_name='Название отделения (DEPNAME)')),
                ('group_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Группа отделений (DEPGRPNAME)')),
                ('view_in_web', models.BooleanField(default=False, verbose_name='Отображать на сайте (VIEWINWEB_OUT)')),
                ('media_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Идентификатор медиа (MEDIAID)')),
                ('is_favorite', models.BooleanField(default=False, verbose_name='Избранное (ISFAVORITE)')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий (COMMENT)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('clinic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='reminder.clinic', verbose_name='Филиал')),
            ],
            options={
                'verbose_name': 'Отделение',
                'verbose_name_plural': 'Отделения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_code', models.BigIntegerField(unique=True, verbose_name='Идентификатор врача (DCODE)')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО врача (DNAME)')),
                ('specialization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Специализация')),
                ('specialization_id', models.SmallIntegerField(blank=True, null=True, verbose_name='ID специализации')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('clinic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctors', to='reminder.clinic', verbose_name='Основная клиника')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctors', to='reminder.department', verbose_name='Отделение')),
            ],
            options={
                'verbose_name': 'Врач',
                'verbose_name_plural': 'Врачи',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='Идентификатор записи на прием')),
                ('is_infoclinica_id', models.BooleanField(default=False, verbose_name='ID из Infoclinica')),
                ('start_time', models.DateTimeField(verbose_name='Время начала приема')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Время окончания приема')),
                ('cabinet_number', models.IntegerField(blank=True, null=True, verbose_name='Номер кабинета')),
                ('service_id', models.IntegerField(blank=True, null=True, verbose_name='ID услуги')),
                ('service_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название услуги')),
                ('status', models.IntegerField(blank=True, null=True, verbose_name='Статус записи')),
                ('processed_for_today', models.BooleanField(default=False, verbose_name='Обработан для сегодняшних уведомлений')),
                ('processed_for_tomorrow', models.BooleanField(default=False, verbose_name='Обработан для завтрашних уведомлений')),
                ('calltime_for_today', models.DateTimeField(blank=True, null=True, verbose_name='Время звонка для сегодняшних уведомлений')),
                ('calltime_for_tomorrow', models.DateTimeField(blank=True, null=True, verbose_name='Время звонка для завтрашних уведомлений')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('clinic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='reminder.clinic', verbose_name='Клиника')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='reminder.department', verbose_name='Отделение')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='reminder.doctor', verbose_name='Врач')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='reminder.patient', verbose_name='Пациент')),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='reminder.queuereason', verbose_name='Причина записи')),
            ],
            options={
                'verbose_name': 'Запись на прием',
                'verbose_name_plural': 'Записи на прием',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='QueueInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queue_id', models.BigIntegerField(unique=True, verbose_name='Идентификатор очереди')),
                ('current_state', models.IntegerField(blank=True, null=True, verbose_name='Идентификатор текущего состояния контакта (CURRENTSTATE)')),
                ('current_state_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование текущего состояния (CURRENTSTATENAME)')),
                ('default_next_state', models.IntegerField(blank=True, null=True, verbose_name='Идентификатор следующего состояния (DEFAULTNEXTSTATE)')),
                ('default_next_state_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование следующего состояния (DEFAULTNEXTSTATENAME)')),
                ('contact_start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала контакта (CONTACTBDATE)')),
                ('contact_end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания контакта (CONTACTFDATE)')),
                ('desired_start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала желаемой записи пациента (ACTIONBDATE)')),
                ('desired_end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания желаемой записи пациента (ACTIONFDATE)')),
                ('doctor_code', models.BigIntegerField(blank=True, null=True, verbose_name='Идентификатор врача (DCODE)')),
                ('doctor_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО врача (DNAME)')),
                ('department_number', models.BigIntegerField(blank=True, null=True, verbose_name='Идентификатор отделения (DEPNUM)')),
                ('department_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название отделения (DEPNAME)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='queue_entries', to='reminder.appointment', verbose_name='Запись на прием')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_queues', to='reminder.clinic', to_field='clinic_id', verbose_name='Филиал звонка (FILIAL)')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entries', to='reminder.patient', verbose_name='Пациент')),
                ('target_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_queues', to='reminder.clinic', to_field='clinic_id', verbose_name='Филиал пациента (TOFILIAL)')),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='queues', to='reminder.queuereason', to_field='reason_id', verbose_name='Причина постановки в очередь')),
            ],
            options={
                'verbose_name': 'Очередь',
                'verbose_name_plural': 'Очереди',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QueueContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_action_id', models.IntegerField(blank=True, null=True, verbose_name='Идентификатор родительского контакта (PARENTACTIONID)')),
                ('next_dcode', models.BigIntegerField(blank=True, null=True, verbose_name='Идентификатор сотрудника следующего звонка (NEXTDCODE)')),
                ('next_dname', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО сотрудника следующего звонка (NEXTDNAME)')),
                ('next_state', models.IntegerField(blank=True, null=True, verbose_name='Идентификатор следующего состояния (NEXTSTATE)')),
                ('next_state_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование следующего состояния (NEXTSTATENAME)')),
                ('next_call_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время следующего звонка (NEXTCALLDATETIME)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('queue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='reminder.queueinfo', verbose_name='Родительская очередь')),
            ],
            options={
                'verbose_name': 'Возможное действие очереди',
                'verbose_name_plural': 'Возможные действия очередей',
                'ordering': ['queue', 'next_state'],
            },
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_key', models.CharField(max_length=255, verbose_name='Ключ заказа в ACS')),
                ('status_id', models.IntegerField(blank=True, null=True, verbose_name='Статус звонка')),
                ('audio_link', models.TextField(blank=True, null=True, verbose_name='Ссылка на аудио')),
                ('is_added', models.BooleanField(default=False, verbose_name='Добавлен')),
                ('call_type', models.CharField(choices=[('today', 'Сегодня'), ('tomorrow', 'Завтра')], max_length=10, verbose_name='Тип звонка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calls', to='reminder.appointment', verbose_name='Запись на прием')),
            ],
            options={
                'verbose_name': 'Звонок',
                'verbose_name_plural': 'Звонки',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['appointment', '-created_at'], name='reminder_ca_appoint_1747df_idx'), models.Index(fields=['order_key'], name='reminder_ca_order_k_3a5442_idx'), models.Index(fields=['call_type'], name='reminder_ca_call_ty_5f5e4d_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'start_time'], name='reminder_ap_patient_7fb043_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['doctor', 'start_time'], name='reminder_ap_doctor__4947cc_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['clinic', 'start_time'], name='reminder_ap_clinic__148557_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['is_active'], name='reminder_ap_is_acti_fe45af_idx'),
        ),
    ]
