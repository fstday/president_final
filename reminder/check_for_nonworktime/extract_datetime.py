import os
import django

# Настройки Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'president_final.settings')
django.setup()

import json
import logging
from datetime import datetime, timedelta
from pydantic import BaseModel, Field
from openai import OpenAI
from django.conf import settings


class DateTimeExtraction(BaseModel):
    """Модель для извлечения даты и времени из пользовательского запроса"""
    date: str = Field(description="Дата в формате YYYY-MM-DD")
    time: str = Field(description="Время в формате HH:MM")
    relative_day: str = Field(
        description="Относительный день (сегодня, завтра, послезавтра, через_2_дня, через_неделю)")
    time_of_day: str = Field(description="Время суток (утро, день, вечер)")


def extract_date_from_input_chat_completion(user_input, client=None, reception_start_time=None, current_datetime_str=None):
    """
    Извлекает дату, время и контекстную информацию из пользовательского ввода

    Args:
        user_input: Текст от пользователя
        client: Клиент OpenAI
        reception_start_time: Текущее время записи пациента (для переносов)
        current_datetime_str: Текущая дата и время в строковом формате

    Returns:
        dict: Извлеченная дата, время и контекстная информация о запросе
    """
    import json
    from datetime import datetime, timedelta

    if client is None:
        from openai import OpenAI
        client = OpenAI(api_key=settings.OPENAI_API_KEY)

    # Текущая дата и время
    now = datetime.now()
    if current_datetime_str:
        try:
            now = datetime.strptime(current_datetime_str, '%Y-%m-%d %H:%M:%S')
        except ValueError:
            # Если формат не соответствует, используем текущую дату/время
            pass

    # Инструкции для извлечения даты/времени
    system_prompt = f"""
    Ты помощник, который извлекает дату, время и намерения из текста на русском языке.
    Твоя задача - правильно интерпретировать запросы пациентов относительно записи на прием.

    ВАЖНЫЕ ПРАВИЛА ИНТЕРПРЕТАЦИИ ДАТЫ:
    1. "сегодня" = текущий день: {now.strftime('%Y-%m-%d')}
    2. "завтра" = текущий день + 1 день: {(now + timedelta(days=1)).strftime('%Y-%m-%d')}
    3. "послезавтра" = текущий день + 2 дня: {(now + timedelta(days=2)).strftime('%Y-%m-%d')}
    4. "после послезавтра" = текущий день + 3 дня: {(now + timedelta(days=3)).strftime('%Y-%m-%d')}
    5. "через неделю" = текущий день + 7 дней: {(now + timedelta(days=7)).strftime('%Y-%m-%d')}

    ПРАВИЛА ВРЕМЕНИ СУТОК:
    - "утро" = 10:30
    - "день" или "обед" = 13:30
    - "вечер" = 18:30
    - "после обеда" = время после 13:00 (обычно 14:00)
    - "вечер" или "вечернее время" = время после 16:00

    ПРАВИЛА ОПРЕДЕЛЕНИЯ ДЕЙСТВИЙ:
    - "записать", "запиши", "поставь", "закрепи" = действие 'reserve' (создание новой записи)
    - "перенести", "перенесите", "переоформите" = действие 'reschedule' (если указана конкретная дата или время) или 'reschedule_day' (если указан только день)
    - "раньше" без указания конкретного времени = действие 'earlier', выбрать время до {reception_start_time} в тот же день
    - "позже", "попозже" без указания конкретного времени = действие 'later', выбрать время после {reception_start_time} в тот же день
    - "удалить", "отменить", "отмените", "убрать", "отказаться", "не хочу", "перестаньте", "уберите запись", "исключить", "закрыть", "отказ", "не актуально" = действие 'delete'
    - "ближайшее свободное время" = действие 'earliest_available'
    - запрос на конкретную дату и время = действие 'reserve'

    РЕШАЮЩИЕ ПРАВИЛА ДЛЯ ОТМЕНЫ/ПЕРЕНОСА:
    - Если в сообщении содержатся слова "перенеси", "перенесите", "переоформите", "запиши", "записать" - это ВСЕГДА запрос на перенос или создание записи, а НЕ на удаление.
    - Запрос на удаление возможен только если используются слова "удалить", "удалите", "отменить", "отмените" и т.д. без упоминания создания новой записи.

    ДОПОЛНИТЕЛЬНЫЕ КОНТЕКСТНЫЕ ПРАВИЛА:
    1. Если пациент просит "ближайшее свободное время" - выбираем самое раннее доступное время.
    2. Если пациент говорит "удобнее после обеда" - выбираем время после 13:00.
    3. Если пациент хочет время, "когда меньше людей" - выбираем время ближе к началу (9:00-10:00) или концу рабочего дня (17:00-18:00).
    4. Если пациент хочет перенести запись "на раньше" - выбираем время только до текущего времени записи: {reception_start_time}.
    5. Если пациент хочет перенести запись "на позже" - выбираем время только после текущего времени записи: {reception_start_time}.
    6. Если пациент просит "перенести на вечер" - выбираем время после 16:00.
    7. Если пациент просит перенести куда-то без уточнения дня - предполагаем тот же день, что и текущая запись.
    8. Если пациент говорит "перенесите на послезавтра" - это 'reschedule_day' на дату через 2 дня от текущей даты, независимо от даты текущей записи.
    9. "Перенесите на сегодня" — действие 'reschedule_day', дата — сегодняшняя дата.
    10. "Перенеси на завтра" — действие 'reschedule_day', дата — завтрашняя дата.

    ПРИМЕРЫ СИТУАЦИЙ:
    1. Пациент просит перенести запись на ближайшее свободное время — выберите время, которое доступно раньше всех. 
    2. Пациенту удобнее после обеда — выберите время после 13:00, если доступно. 
    3. Пациент говорит, что хочет время, когда будет меньше людей — выберите время, максимально близкое к началу или концу рабочего дня. 
    4. Пациент говорит, что хочет перенести запись на раньше - не рассматриваем время, которое позже времени текущей записи пациента: {reception_start_time}. 
    5. Пациент говорит, что хочет перенести запись на позже - рассматриваем только время, которое позже времени текущей записи пациента: {reception_start_time}. 
    6. Когда пациент говорит, что хочет перенести запись раньше или позже - выберите время, в день когда существует нынешняя запись у пациента: {reception_start_time}. 
    7. Пациенту нужно перенести запись на раньше или позже без уточнения дня - выберите время в день когда существует нынешняя запись у пациента. 
    8. Пациенту нужно перенести запись на вечер - выберите время после 16:00, если доступно. 
    9. Пациент говорит: 'Перенесите запись на после завтра' - интерпретация: действие 'reschedule_day', дата и время - на 2 дня вперед, чем дата сегодня: ({current_datetime_str}). Не учитывайте дату записи, а отталкивайтесь от даты сегодня.
    10. Когда пациент говорит что нужно перенести запись позже или попозже, не удаляй его запись если не получилось записать на свободные времена.

    ВОЗВРАЩАЕМЫЙ ФОРМАТ:
    Возвращай результат в JSON формате с полями:
    - date: дата в формате YYYY-MM-DD
    - time: время в формате HH:MM
    - relative_day: относительный день (сегодня, завтра, послезавтра, и т.д.)
    - time_of_day: время суток (утро, день, вечер)
    - action: определенное действие (reserve, reschedule, reschedule_day, earlier, later, delete, earliest_available)
    - context: дополнительная информация о контексте запроса
    - description: краткое описание намерения пациента (например, "Пользователь хочет перенести запись на завтра утром")
    """

    # Отправляем запрос к API
    response = client.chat.completions.create(
        model="gpt-4o-mini",
        response_format={"type": "json_object"},
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user",
             "content": f"Извлеки дату, время и контекст из следующего запроса: '{user_input}'. Текущая дата: {now.strftime('%Y-%m-%d')}. Время текущей записи пациента (если есть): {reception_start_time}."}
        ]
    )

    # Парсим ответ
    result = response.choices[0].message.content
    extracted_data = json.loads(result)

    return extracted_data
